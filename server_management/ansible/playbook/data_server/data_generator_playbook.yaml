- name: Docker 컨테이너로 Spring Boot 애플리케이션 배포
  hosts: data_instance_server
  become: yes
  vars:
    app_image: scofe/data_generator
    github_token: "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" # 이 토큰은 노출되지 않도록 주의해주세요!

  tasks:
    - name: Install required packages
      apt:
        name:
          - git
        state: present

    - name: Clone the repository
      git:
        repo: "https://scofe97:{{ github_token }}@github.com/Projcet-E201/DataGenerator.git"
        dest: "/home/ubuntu/DataGenerator"
        clone: yes
        update: yes
        force: yes

    - name: Copy application-secret.yaml on the remote host
      command:
        cmd: cp /home/ubuntu/secret/application-secret.yaml /home/ubuntu/DataGenerator/src/main/resources

    - name: Grant execution permissions to Gradle wrapper
      ansible.builtin.file:
        path: /home/ubuntu/DataGenerator/gradlew
        mode: "0755"

    - name: Build the project with Gradle
      command: ./gradlew clean bootjar
      args:
        chdir: /home/ubuntu/DataGenerator

    - name: Build Docker image
      command: docker build -t {{ app_image }} /home/ubuntu/DataGenerator

    # 컨테이너 제거
    - name: Remove existing container 1 if it's running
      ansible.builtin.docker_container:
        name: spring_boot_app_container1
        state: absent
      ignore_errors: yes

    - name: Remove existing container 2 if it's running
      ansible.builtin.docker_container:
        name: spring_boot_app_container2
        state: absent
      ignore_errors: yes

    - name: Deploy container 1
      include_tasks: deploy_container.yml
      vars:
        app_container_name: spring_boot_app_container1
        app_profile: "{{ spring_profiles.container1[inventory_hostname] }}"
        app_port: 8084

    - name: Deploy container 2
      include_tasks: deploy_container.yml
      vars:
        app_container_name: spring_boot_app_container2
        app_profile: "{{ spring_profiles.container2[inventory_hostname] }}"
        app_port: 8085
