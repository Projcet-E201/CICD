# 플레이북에는 하나 이상의 플레이가 있을 수 있습니다.
- name: 자바 11설치
  hosts: data_division_server # 이 플레이의 대상 호스트 (인벤토리 파일에서 정의됨)
  become: yes # 필요한 경우 권한을 상승시킵니다 (sudo로 권한 상승)
  tasks: # 이 플레이에 대해 실행할 작업 목록

    - name: apt update
      apt:
        update_cache: yes

    - name: Java OpenJDK 11 Install
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Java version check
      ansible.builtin.command:
        _raw_params: java --version


- name: 원격 호스트에 Docker & Docker-compose 설치 및 구성
  hosts: data_division_server
  become: yes
  tasks:
    - name: Docker 설치를 위한 필수 패키지 설치
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present

    - name: Docker 공식 GPG 키 추가
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Docker APT 리포지토리 추가
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Docker 설치
      ansible.builtin.apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Docker 서비스 활성화 및 시작
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Update Docker service configuration file
      ansible.builtin.lineinfile:
        path: /lib/systemd/system/docker.service
        regexp: "^ExecStart="
        line: "ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375"
      become: yes

    

    - name: 도커 리부팅
      ansible.builtin.systemd:
        daemon_reload: yes
      become: yes

    - name: 도커 재시작
      ansible.builtin.service:
        name: docker
        state: restarted
      become: yes

    - name: 도커 컴포즈 링크 가져오기
      ansible.builtin.shell: echo "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)"
      register: docker_compose_url

    - name: 도커 컴포즈 설치
      ansible.builtin.get_url:
        url: "{{ docker_compose_url.stdout }}"
        dest: /usr/local/bin/docker-compose
        mode: "0755"

    - name: Check docker-compose version
      ansible.builtin.command:
        cmd: docker-compose --version

- name: 도커 추가 설정 진행
  hosts: data_division_server
  become: yes
  tasks:
    - name: 도커 네트워크가 존재하는지 확인
      ansible.builtin.command:
        cmd: docker network ls --filter name=br_app
      register: br_app_network
      changed_when: false

    - name: 도커 네트워크 생성
      ansible.builtin.command:
        cmd: docker network create br_app
      when: "'br_app' not in br_app_network.stdout"

    - name: 도커 그룹 생성
      become: yes
      group:
        name: docker
        state: present

    - name: 현재 유저를 도커 그룹에 추가
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        group: docker
        append: yes

    - name: 도커소켓 권한 수정
      become: yes
      file:
        path: /var/run/docker.sock
        mode: "0666"

    - name: 도커 재실행
      ansible.builtin.systemd:
        name: docker
        state: restarted
        
- name: 파이썬 라이브러리 설치
  hosts: data_division_server
  become: yes
  tasks:
    - name: Install python3-apt
      apt:
        name: python3-apt
        update_cache: yes

    - name: Install python3-pip
      ansible.builtin.package:
        name: python3-pip
        state: present

    - name: 도커 컴포즈 설치
      ansible.builtin.pip:
        name: docker
        state: present

    - name: 도커 컴포즈 라이브러리 설치
      ansible.builtin.pip:
        name: docker-compose
        state: present
